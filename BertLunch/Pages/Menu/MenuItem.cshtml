@page
@using BertLunch.Pages.HelperMethods;
@model MenuItemModel
@{
    ViewData["Title"] = "menu page";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    string TruncateWords(string input, int maxWords)
    {
        if (!string.IsNullOrEmpty(input))
        {
            string[] words = input.Split(' ');

            if (words.Length > maxWords)
            {
                string truncatedText = string.Join(" ", words.Take(maxWords));
                return truncatedText + " ...";
            }
            else
            {
                return input;
            }
        }

        return string.Empty;
    }
}

<div class="slider_area">
    <div class="slider_active">
        <div class="single_slider d-flex align-items-center slider_bg_1 overlay">
            <div class="container">
                <div class="row align-items-center justify-content-center">
                    <div class="col-xl-9 col-md-9 col-md-12">
                        <div class="slider_text container">
                            <h2>Menu</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- slider_area_end -->


<!-- Delicious area start  -->
<div class="Delicious_area">
    <div class="tablist_menu">
        <div class="row menu_main_header_area" id="menu_list_sticky_header">
            <div class="col-xl-12">
                <ul class="nav justify-content-center" id="pills-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link @(Model.CategoryId == 3 ? "active" : "")" 
                            id="pills-assiette-tab" data-bs-toggle="pill"
                            onclick="location.href=this.href" href="?categoryId=3"
                            role="tab" aria-bs-controls="pills-assiette" aria-bs-selected="true"
                        >
                            <div class="single_menu text-center">
                                <h4>Des assiettes</h4>
                            </div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(Model.CategoryId == 6 ? "active" : "")" 
                            id="pills-burger-tab" data-bs-toggle="pill" 
                            onclick="location.href=this.href" href="?categoryId=6" role="tab" 
                            aria-bs-controls="pills-burger" aria-bs-selected="true"
                        >
                            <div class="single_menu text-center">
                                <h4>Les Burgers</h4>
                            </div>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(Model.CategoryId == 4 ? "active" : "")"
                           id="pills-sandwich-tab" data-bs-toggle="pill"
                           onclick="location.href=this.href" href="?categoryId=4" role="tab"
                           aria-bs-controls="pills-sandwich" aria-bs-selected="true">
                            <div class="single_menu text-center">
                                <h4>Les sandwiches</h4>
                            </div>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="tab-content menu_section" id="pills-tabContent"
        style="background-image: url('/img/homepage/texture_wood.png');">

        <div class="tab-pane fade show @(Model.CategoryId == 3 ? "show active" : "")" 
            id="pills-assiette" role="tabpanel" aria-bs-labelledby="pills-assiette-tab">
            <div class="container">
                <div class="row pb-3">
                    @foreach (var group in Model.MenuItems)
                    {
                        <h2 class="text-center mt-5">@group.First().Category.Label</h2>
                        @foreach (var item in group)
                    {
                            <div class="col-sm-6 col-md-4">
                                <div class="card w-100 h-100 rounded-3 menu_item_page card_info">
                                <div data-bs-toggle="modal" data-bs-target="#detailsItemModal" onclick="populateAndShowModal('@item.Id')">
                                        <img src="@Url.Content(@item.Image)" alt="@item.MenuName" class="card-img-top">
                                        <div class="pb-3 pt-4 px-4">
                                            <h5 class="font-weight-bold">@item.MenuName</h5>
                                            <p class="card-text">@TruncateWords(@item.Ingredient, 6)</p>
                                            <p class="price_menuitem">@item.Price.ToString("N2") €</p>
                                        </div>
                                    </div>
                                    
                                    <div class="d-flex justify-content-center mb-3">

                                        <div class="emoji-feedback">
                                            <span>🎉</span>
                                            <span>👍</span>
                                            <span>😊</span>
                                            <span>👍</span>
                                            <span style="color:green;">added</span>
                                        </div>

                                        <button class="btn basket_button" onclick="addToBasket(event, @item.Id); animateEmoji(this);">Add to basket</button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="tab-pane fade @(Model.CategoryId == 6 ? "show active" : "")" 
            id="pills-burger" role="tabpanel" aria-bs-labelledby="pills-burger-tab">
            <div class="container">
                <div class="row pb-3">
                    @foreach (var group in Model.MenuItems)
                {
                    <h2 class="text-center mt-5">@group.First().Category.Label</h2>
                    @foreach (var item in group)
                    {
                        <div class="col-sm-6 col-md-4">
                            <div class="card w-100 h-100 rounded-3 menu_item_page card_info">
                                <div data-bs-toggle="modal" data-bs-target="#detailsItemModal" onclick="populateAndShowModal('@item.Id')">
                                    <img src="@Url.Content(@item.Image)" alt="@item.MenuName" class="card-img-top">
                                    <div class="pb-3 pt-4 px-4">
                                        <h5 class="font-weight-bold">@item.MenuName</h5>
                                        <p class="card-text">@TruncateWords(@item.Ingredient, 6)</p>
                                        <p class="price_menuitem">@item.Price.ToString("N2") €</p>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-center mb-3">

                                    <div class="emoji-feedback">
                                        <span>🎉</span>
                                        <span>👍</span>
                                        <span>😊</span>
                                        <span>👍</span>
                                        <span style="color:green;">added</span>
                                    </div>

                                    <button class="btn basket_button" onclick="addToBasket(event, @item.Id); animateEmoji(this);">Add to basket</button>
                                </div>
                            </div>
                        </div>
                    }
                }
                </div>
            </div>
        </div>

        <div class="tab-pane fade @(Model.CategoryId == 4 ? "show active" : "")"
             id="pills-sandwich" role="tabpanel" aria-bs-labelledby="pills-sandwich-tab">
            <div class="container">
                <div class="row pb-3">
                    @foreach (var group in Model.MenuItems)
                    {
                        <h2 class="text-center mt-5">@group.First().Category.Label</h2>
                        @foreach (var item in group)
                        {
                            <div class="col-sm-6 col-md-4">
                                <div class="card w-100 h-100 rounded-3 menu_item_page card_info">
                                    <div data-bs-toggle="modal" data-bs-target="#detailsItemModal" onclick="populateAndShowModal('@item.Id')">
                                        <img src="@Url.Content(@item.Image)" alt="@item.MenuName" class="card-img-top">
                                        <div class="pb-3 pt-4 px-4">
                                            <h5 class="font-weight-bold">@item.MenuName</h5>
                                            <p class="card-text">@TruncateWords(@item.Ingredient, 6)</p>
                                            <p class="price_menuitem">@item.Price.ToString("N2") €</p>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-center mb-3">
                                        <div class="emoji-feedback">
                                            <span>🎉</span>
                                            <span>👍</span>
                                            <span>😊</span>
                                            <span>👍</span>
                                            <span style="color:white;font-weight:700;">added</span>
                                        </div>
                                        <button class="btn basket_button" onclick="addToBasket(event, @item.Id); animateEmoji(this);">Add to basket</button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<partial name="HelperMethods/_ReusableModal" model="new ReusableModalModel{}" />
@section Scripts {
    <script>
           document.addEventListener('DOMContentLoaded', function () {
                var header = document.getElementById('menu_list_sticky_header');

               window.addEventListener('scroll', function () {

               if (window.scrollY > 450) {
                   header.classList.add('sticky');
               } else if (window.scrollY < 450) {
                   header.classList.remove('sticky');
               }
               });
            });

            function animateEmoji(button) {
                // Find the closest emoji-feedback container to the clicked button
                var emojiFeedback = button.closest('.menu_item_page').querySelector('.emoji-feedback');
                gsap.set(emojiFeedback, { display: 'block' });

                // Animate each emoji
                gsap.utils.toArray(emojiFeedback.children).forEach((emoji, index) => {
                    var isText = emoji.textContent.includes("added");
                    var duration = isText ? 4 : 2;
                    var randomXOffset = Math.random() * 100 - 50;
                    var randomYOffset = Math.random() * 100 - 150;

                    gsap.fromTo(emoji,
                        { y: 0, x: 0, opacity: 1 },
                        { duration: duration, y: randomYOffset, x: randomXOffset, opacity: 0, ease: "power1.out" });
                });

                // Hide the container after all animations are done
                gsap.to(emojiFeedback, { duration: 4, delay: 2, display: 'none' });
            }

    </script>
}